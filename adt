#!/bin/bash

#Folder where the script can found the file pointers
DIR=~/bin/series/titles/

# port, username, password
SERVER="192.168.1.10:9091 --auth admin:admin"

# use transmission-remote to get torrent list from transmission-remote list
# use sed to delete first / last line of output, and remove leading spaces
# use cut to get first field from each line
TORRENTLIST=`transmission-remote $SERVER --list | sed -e '1d;$d;s/^ *//' | cut --only-delimited --delimiter=" "  --fields=1`

#Let's go to the folder of pointers
cd "$DIR"
# for each torrent in the list
for TORRENTID in $TORRENTLIST
do

    # check if torrent download is completed
    DL_COMPLETED=`transmission-remote $SERVER --torrent $TORRENTID --info | grep "Percent Done: 100%"`

    # check torrents current state is
    STATE_STOPPED=`transmission-remote $SERVER --torrent $TORRENTID --info | grep "State: Stopped\|Finished\|IdleÃ¢"`

    # if the torrent is "Stopped", "Finished", or "Idle after downloading 100%"
    if [ "$DL_COMPLETED" ] && [ "$STATE_STOPPED" ]; then

	#Retrieve the filename to compare it with series pointers
	FILENAME=`transmission-remote $SERVER --torrent $TORRENTID --info | grep "Name: "`
	TORRENT=${FILENAME:8}

	#Does it belong to a series?
	for SERIES in *
	do
		#Make sure SERIES is not ".." or "."
		if test SERIES != ".." -a SERIES != "."; then
			#Does it match the begining of TORRENT with SERIES?
			if [[ $TORRENT == $SERIES* ]]; then
				echo "Processing: $TORRENTID - $TORRENT"
				echo ">>> Series: $SERIES"
				#Get the destination folder from the pointer's contents
				MOVEDIR=$(<"$DIR$SERIES")
				#Retrieve the current location of the file
				P1LOCATION=`transmission-remote $SERVER --torrent $TORRENTID --info | grep "Location: "`
				LOCATION="${P1LOCATION:12}" #Again we remove Location: with some initial spaces
				#This is for trimmint the location. but I haven't observed extra spaces off limits.
				#LOCATION=`echo "$P2LOCATION" | sed 's/^ *\(.*\) *$/\1/'`
	
				#If LOCATION doesn't ends with /, we add one
				if [[ ${LOCATION: -1} != "/" ]]; then
					
					LOCATION="$LOCATION/"
				fi
				
				#IS already the file where it's suposed to be?
				if [[ $LOCATION == $MOVEDIR ]]; then
					#There's no need to move the file
					echo "The file is already in place"
				else
					#Moving the file
					echo "Moving file to $MOVEDIR"
					echo ">>> O->$LOCATION"
					echo ">>> D->$MOVEDIR"
					transmission-remote $SERVER --torrent $TORRENTID --move "$MOVEDIR"
					echo ">>> Torrent $TORRENTID moved"
					#echo "Removing torrent from list"
					#transmission-remote $SERVER --torrent $TORRENTID --remove
				fi
			fi
		fi
	done
    else
        echo "Torrent #$TORRENTID is not completed. Ignoring."
    fi
done
cd
